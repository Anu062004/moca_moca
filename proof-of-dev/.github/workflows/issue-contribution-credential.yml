name: Issue Contribution Credential

on:
  pull_request:
    types: [closed]
  push:
    branches: [main, master]

jobs:
  issue-credential:
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          cd proof-of-dev
          npm ci
          
      - name: Issue Project Credential
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL || 'http://localhost:3000' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AIRKIT_PARTNER_ID: ${{ secrets.AIRKIT_PARTNER_ID }}
          AIRKIT_API_KEY: ${{ secrets.AIRKIT_API_KEY }}
        run: |
          cd proof-of-dev
          
          # Get PR information
          PR_NUMBER=${{ github.event.pull_request.number }}
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_URL="${{ github.event.pull_request.html_url }}"
          AUTHOR="${{ github.event.pull_request.user.login }}"
          REPO_NAME="${{ github.repository }}"
          
          # Create project credential data
          CREDENTIAL_DATA=$(cat <<EOF
          {
            "projectName": "$PR_TITLE",
            "description": "Contribution to $REPO_NAME via PR #$PR_NUMBER",
            "url": "$PR_URL",
            "repository": "$REPO_NAME",
            "pullRequestNumber": $PR_NUMBER,
            "author": "$AUTHOR",
            "mergedAt": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "type": "Contribution"
          }
          EOF
          )
          
          # Issue credential via API
          curl -X POST "$API_BASE_URL/api/auto-verify" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -d "{
              \"type\": \"ProjectCredential\",
              \"subjectDid\": \"did:moca:developer:$AUTHOR\",
              \"credentialData\": $CREDENTIAL_DATA,
              \"source\": \"GitHub Action\",
              \"event\": \"pull_request_merged\"
            }"
            
      - name: Issue Skill Credential (if significant contribution)
        if: github.event.pull_request.additions > 100
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL || 'http://localhost:3000' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AIRKIT_PARTNER_ID: ${{ secrets.AIRKIT_PARTNER_ID }}
          AIRKIT_API_KEY: ${{ secrets.AIRKIT_API_KEY }}
        run: |
          cd proof-of-dev
          
          # Get language information
          LANGUAGE=$(echo "${{ github.event.pull_request.head.repo.language }}" | tr '[:upper:]' '[:lower:]')
          AUTHOR="${{ github.event.pull_request.user.login }}"
          ADDITIONS=${{ github.event.pull_request.additions }}
          
          # Create skill credential data
          SKILL_DATA=$(cat <<EOF
          {
            "skill": "$LANGUAGE",
            "level": "Intermediate",
            "evidence": {
              "type": "GitHub Contribution",
              "repository": "${{ github.repository }}",
              "pullRequest": "${{ github.event.pull_request.html_url }}",
              "linesAdded": $ADDITIONS,
              "verifiedAt": "$(date -u +%Y-%m-%dT%H:%M:%SZ)"
            }
          }
          EOF
          )
          
          # Issue skill credential
          curl -X POST "$API_BASE_URL/api/auto-verify" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -d "{
              \"type\": \"SkillCredential\",
              \"subjectDid\": \"did:moca:developer:$AUTHOR\",
              \"credentialData\": $SKILL_DATA,
              \"source\": \"GitHub Action\",
              \"event\": \"significant_contribution\"
            }"
            
      - name: Notify on success
        if: success()
        run: |
          echo "✅ Credentials issued successfully for PR #${{ github.event.pull_request.number }}"
          echo "📋 Project Credential: Contribution to ${{ github.repository }}"
          if [ "${{ github.event.pull_request.additions }}" -gt 100 ]; then
            echo "🎯 Skill Credential: ${{ github.event.pull_request.head.repo.language }} proficiency"
          fi
          
      - name: Notify on failure
        if: failure()
        run: |
          echo "❌ Failed to issue credentials for PR #${{ github.event.pull_request.number }}"
          echo "🔍 Check API configuration and credentials"
